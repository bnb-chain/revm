{
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-single_code_section_no_data_section]": {
        "vectors": {
            "0": {
                "code": "0xef00010100040200010001000080000000",
                "results": {
                    "Prague": {
                        "exception": "EOFException.MISSING_DATA_SECTION",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0x449bd2d7cbe4c2f9bf1d688df9ef6cce86029775ccf780e94e43dc55a23214ba",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-incomplete_magic]": {
        "vectors": {
            "0": {
                "code": "0xef",
                "results": {
                    "Prague": {
                        "exception": "EOFException.INVALID_MAGIC",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0xc424a49ee0b2ba5f8eb91c213c9fd15972ae849750aa611a9c08499c6ca7deb7",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-no_version]": {
        "vectors": {
            "0": {
                "code": "0xef00",
                "results": {
                    "Prague": {
                        "exception": "EOFException.INVALID_VERSION",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0x3ffd5c80118df22607d7986b0518cf7a3fa73804d292f0ccb8ed9ce85446cfac",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-no_type_header]": {
        "vectors": {
            "0": {
                "code": "0xef0001",
                "results": {
                    "Prague": {
                        "exception": "EOFException.MISSING_HEADERS_TERMINATOR",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0xb7dee4d2489867b457e40ef5e1ebb38953647e885973452e194b8200b082e5d1",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-no_type_section_size]": {
        "vectors": {
            "0": {
                "code": "0xef000101",
                "results": {
                    "Prague": {
                        "exception": "EOFException.MISSING_HEADERS_TERMINATOR",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0x57762a060ecfc3d63ac8d6d06787cdf327458ab0f529bb2289be1ec99d63040e",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-no_code_header]": {
        "vectors": {
            "0": {
                "code": "0xef0001010004fe",
                "results": {
                    "Prague": {
                        "exception": "EOFException.MISSING_CODE_HEADER",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0xdb92eb9cd2b8f83036fcf2aa622af1ccf2a2835c4822d7f84360ad054d552e58",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-code_section_size_incomplete_1]": {
        "vectors": {
            "0": {
                "code": "0xef000101000402",
                "results": {
                    "Prague": {
                        "exception": "EOFException.INCOMPLETE_SECTION_NUMBER",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0xb3daa6d9ecfa1be5fb7f93a8d7811fc8be11ab7923b165dfe60ba2d8c100f868",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-code_section_size_incomplete_2]": {
        "vectors": {
            "0": {
                "code": "0xef00010100040200",
                "results": {
                    "Prague": {
                        "exception": "EOFException.INCOMPLETE_SECTION_NUMBER",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0x8a7bae54a6299499e938df8d54db7adbbd83224fa2f1e331da8a591ba3391c8b",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-code_section_size_incomplete_3]": {
        "vectors": {
            "0": {
                "code": "0xef0001010004020001",
                "results": {
                    "Prague": {
                        "exception": "EOFException.MISSING_HEADERS_TERMINATOR",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0xe4c78b73d454aeae8b4afab18c8a9a81cb90915c07042d671bf1c68f1402af5e",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-code_section_size_incomplete_4]": {
        "vectors": {
            "0": {
                "code": "0xef000101000402000100",
                "results": {
                    "Prague": {
                        "exception": "EOFException.INCOMPLETE_SECTION_SIZE",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0x16a797926508939ab65fbc36434f0c6a63979e66b4d83a5e0c3c6f39d236c028",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-terminator_incomplete]": {
        "vectors": {
            "0": {
                "code": "0xef00010100040200010001040000",
                "results": {
                    "Prague": {
                        "exception": "EOFException.MISSING_HEADERS_TERMINATOR",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0x27662edb205ee5f7e1970ef15ecd2ba77112cb0b7e6ced88256cc74a56ffac89",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-no_data_section_size]": {
        "vectors": {
            "0": {
                "code": "0xef0001010004020001000004",
                "results": {
                    "Prague": {
                        "exception": "EOFException.ZERO_SECTION_SIZE",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0xf3d997d2b5815892b53b417f42c52be40d0fe02ae1e1a0317cba4e47af5f656c",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-data_section_size_incomplete]": {
        "vectors": {
            "0": {
                "code": "0xef000101000402000100000300",
                "results": {
                    "Prague": {
                        "exception": "EOFException.ZERO_SECTION_SIZE",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0xf6c1b7b17cf21787b9c7917fb4f330a83b22c487cf0c5d8d96566b080aea3876",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-no_sections]": {
        "vectors": {
            "0": {
                "code": "0xef000100",
                "results": {
                    "Prague": {
                        "exception": "EOFException.MISSING_TYPE_HEADER",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0xbb3e36fed922dce926662c1b51a7df132f96ae9d3fa7f127ae614067c9bbb2f5",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-no_code_section]": {
        "vectors": {
            "0": {
                "code": "0xef0001010004040001000000000000",
                "results": {
                    "Prague": {
                        "exception": "EOFException.MISSING_CODE_HEADER",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0x157dff2610d7dda66e189e1cc97cf343eb792b5a71e4aa8abd47f218b484a6b1",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-too_many_code_sections]": {
        "vectors": {
            "0": {
                "code": "0xefe50001e50002e50003e50004e50005e50006e50007e50008e50009e5000ae5000be5000ce5000de5000ee5000fe50010e50011e50012e50013e50014e50015e50016e50017e50018e50019e5001ae5001be5001ce5001de5001ee5001fe50020e50021e50022e50023e50024e50025e50026e50027e50028e50029e5002ae5002be5002ce5002de5002ee5002fe50030e50031e50032e50033e50034e50035e50036e50037e50038e50039e5003ae5003be5003ce5003de5003ee5003fe50040e50041e50042e50043e50044e50045e50046e50047e50048e50049e5004ae5004be5004ce5004de5004ee5004fe50050e50051e50052e50053e50054e50055e50056e50057e50058e50059e5005ae5005be5005ce5005de5005ee5005fe50060e50061e50062e50063e50064e50065e50066e50067e50068e50069e5006ae5006be5006ce5006de5006ee5006fe50070e50071e50072e50073e50074e50075e50076e50077e50078e50079e5007ae5007be5007ce5007de5007ee5007fe50080e50081e50082e50083e50084e50085e50086e50087e50088e50089e5008ae5008be5008ce5008de5008ee5008fe50090e50091e50092e50093e50094e50095e50096e50097e50098e50099e5009ae5009be5009ce5009de5009ee5009fe500a0e500a1e500a2e500a3e500a4e500a5e500a6e500a7e500a8e500a9e500aae500abe500ace500ade500aee500afe500b0e500b1e500b2e500b3e500b4e500b5e500b6e500b7e500b8e500b9e500bae500bbe500bce500bde500bee500bfe500c0e500c1e500c2e500c3e500c4e500c5e500c6e500c7e500c8e500c9e500cae500cbe500cce500cde500cee500cfe500d0e500d1e500d2e500d3e500d4e500d5e500d6e500d7e500d8e500d9e500dae500dbe500dce500dde500dee500dfe500e0e500e1e500e2e500e3e500e4e500e5e500e6e500e7e500e8e500e9e500eae500ebe500ece500ede500eee500efe500f0e500f1e500f2e500f3e500f4e500f5e500f6e500f7e500f8e500f9e500fae500fbe500fce500fde500fee500ffe50100e50101e50102e50103e50104e50105e50106e50107e50108e50109e5010ae5010be5010ce5010de5010ee5010fe50110e50111e50112e50113e50114e50115e50116e50117e50118e50119e5011ae5011be5011ce5011de5011ee5011fe50120e50121e50122e50123e50124e50125e50126e50127e50128e50129e5012ae5012be5012ce5012de5012ee5012fe50130e50131e50132e50133e50134e50135e50136e50137e50138e50139e5013ae5013be5013ce5013de5013ee5013fe50140e50141e50142e50143e50144e50145e50146e50147e50148e50149e5014ae5014be5014ce5014de5014ee5014fe50150e50151e50152e50153e50154e50155e50156e50157e50158e50159e5015ae5015be5015ce5015de5015ee5015fe50160e50161e50162e50163e50164e50165e50166e50167e50168e50169e5016ae5016be5016ce5016de5016ee5016fe50170e50171e50172e50173e50174e50175e50176e50177e50178e50179e5017ae5017be5017ce5017de5017ee5017fe50180e50181e50182e50183e50184e50185e50186e50187e50188e50189e5018ae5018be5018ce5018de5018ee5018fe50190e50191e50192e50193e50194e50195e50196e50197e50198e50199e5019ae5019be5019ce5019de5019ee5019fe501a0e501a1e501a2e501a3e501a4e501a5e501a6e501a7e501a8e501a9e501aae501abe501ace501ade501aee501afe501b0e501b1e501b2e501b3e501b4e501b5e501b6e501b7e501b8e501b9e501bae501bbe501bce501bde501bee501bfe501c0e501c1e501c2e501c3e501c4e501c5e501c6e501c7e501c8e501c9e501cae501cbe501cce501cde501cee501cfe501d0e501d1e501d2e501d3e501d4e501d5e501d6e501d7e501d8e501d9e501dae501dbe501dce501dde501dee501dfe501e0e501e1e501e2e501e3e501e4e501e5e501e6e501e7e501e8e501e9e501eae501ebe501ece501ede501eee501efe501f0e501f1e501f2e501f3e501f4e501f5e501f6e501f7e501f8e501f9e501fae501fbe501fce501fde501fee501ffe50200e50201e50202e50203e50204e50205e50206e50207e50208e50209e5020ae5020be5020ce5020de5020ee5020fe50210e50211e50212e50213e50214e50215e50216e50217e50218e50219e5021ae5021be5021ce5021de5021ee5021fe50220e50221e50222e50223e50224e50225e50226e50227e50228e50229e5022ae5022be5022ce5022de5022ee5022fe50230e50231e50232e50233e50234e50235e50236e50237e50238e50239e5023ae5023be5023ce5023de5023ee5023fe50240e50241e50242e50243e50244e50245e50246e50247e50248e50249e5024ae5024be5024ce5024de5024ee5024fe50250e50251e50252e50253e50254e50255e50256e50257e50258e50259e5025ae5025be5025ce5025de5025ee5025fe50260e50261e50262e50263e50264e50265e50266e50267e50268e50269e5026ae5026be5026ce5026de5026ee5026fe50270e50271e50272e50273e50274e50275e50276e50277e50278e50279e5027ae5027be5027ce5027de5027ee5027fe50280e50281e50282e50283e50284e50285e50286e50287e50288e50289e5028ae5028be5028ce5028de5028ee5028fe50290e50291e50292e50293e50294e50295e50296e50297e50298e50299e5029ae5029be5029ce5029de5029ee5029fe502a0e502a1e502a2e502a3e502a4e502a5e502a6e502a7e502a8e502a9e502aae502abe502ace502ade502aee502afe502b0e502b1e502b2e502b3e502b4e502b5e502b6e502b7e502b8e502b9e502bae502bbe502bce502bde502bee502bfe502c0e502c1e502c2e502c3e502c4e502c5e502c6e502c7e502c8e502c9e502cae502cbe502cce502cde502cee502cfe502d0e502d1e502d2e502d3e502d4e502d5e502d6e502d7e502d8e502d9e502dae502dbe502dce502dde502dee502dfe502e0e502e1e502e2e502e3e502e4e502e5e502e6e502e7e502e8e502e9e502eae502ebe502ece502ede502eee502efe502f0e502f1e502f2e502f3e502f4e502f5e502f6e502f7e502f8e502f9e502fae502fbe502fce502fde502fee502ffe50300e50301e50302e50303e50304e50305e50306e50307e50308e50309e5030ae5030be5030ce5030de5030ee5030fe50310e50311e50312e50313e50314e50315e50316e50317e50318e50319e5031ae5031be5031ce5031de5031ee5031fe50320e50321e50322e50323e50324e50325e50326e50327e50328e50329e5032ae5032be5032ce5032de5032ee5032fe50330e50331e50332e50333e50334e50335e50336e50337e50338e50339e5033ae5033be5033ce5033de5033ee5033fe50340e50341e50342e50343e50344e50345e50346e50347e50348e50349e5034ae5034be5034ce5034de5034ee5034fe50350e50351e50352e50353e50354e50355e50356e50357e50358e50359e5035ae5035be5035ce5035de5035ee5035fe50360e50361e50362e50363e50364e50365e50366e50367e50368e50369e5036ae5036be5036ce5036de5036ee5036fe50370e50371e50372e50373e50374e50375e50376e50377e50378e50379e5037ae5037be5037ce5037de5037ee5037fe50380e50381e50382e50383e50384e50385e50386e50387e50388e50389e5038ae5038be5038ce5038de5038ee5038fe50390e50391e50392e50393e50394e50395e50396e50397e50398e50399e5039ae5039be5039ce5039de5039ee5039fe503a0e503a1e503a2e503a3e503a4e503a5e503a6e503a7e503a8e503a9e503aae503abe503ace503ade503aee503afe503b0e503b1e503b2e503b3e503b4e503b5e503b6e503b7e503b8e503b9e503bae503bbe503bce503bde503bee503bfe503c0e503c1e503c2e503c3e503c4e503c5e503c6e503c7e503c8e503c9e503cae503cbe503cce503cde503cee503cfe503d0e503d1e503d2e503d3e503d4e503d5e503d6e503d7e503d8e503d9e503dae503dbe503dce503dde503dee503dfe503e0e503e1e503e2e503e3e503e4e503e5e503e6e503e7e503e8e503e9e503eae503ebe503ece503ede503eee503efe503f0e503f1e503f2e503f3e503f4e503f5e503f6e503f7e503f8e503f9e503fae503fbe503fce503fde503fee503ffe5040000",
                "results": {
                    "Prague": {
                        "exception": "EOFException.TOO_MANY_CODE_SECTIONS",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0x1ed611efa3d2e7e897a14b0ffd408dabe8baab03641366430df6185623be37c5",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-zero_code_sections_header]": {
        "vectors": {
            "0": {
                "code": "0xef0001010004020000030000000000000000000000",
                "results": {
                    "Prague": {
                        "exception": "EOFException.ZERO_SECTION_SIZE",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0x1ebdcbd1458ace28d2b323ceeb5d75089d40ebed3bc840a621a1a33a0bfc4eea",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-no_section_terminator]": {
        "vectors": {
            "0": {
                "code": "0xef000101000402000100010400000080000000",
                "results": {
                    "Prague": {
                        "exception": "EOFException.INVALID_SECTION_BODIES_SIZE",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0x72689df3586b0b64d7266fff5aeadf2a1c8ce4f31b38dc7f1e07167a2aa25fd4",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-no_section_terminator_1]": {
        "vectors": {
            "0": {
                "code": "0xef000101000402000100020400000080000000",
                "results": {
                    "Prague": {
                        "exception": "EOFException.INVALID_SECTION_BODIES_SIZE",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0x7be68589628789271d891a2ea46b40249ce824c405755ccc70aa9c4385bba86a",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-no_section_terminator_2]": {
        "vectors": {
            "0": {
                "code": "0xef0001010004020001000304000000800000",
                "results": {
                    "Prague": {
                        "exception": "EOFException.INVALID_SECTION_BODIES_SIZE",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0xdbb394151c984290a177996e3935b05a54ae35c8dedfea6136d72cb7cec45a5a",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-no_section_terminator_3]": {
        "vectors": {
            "0": {
                "code": "0xef0001010004020001000304000000800001600000",
                "results": {
                    "Prague": {
                        "exception": "EOFException.INVALID_SECTION_BODIES_SIZE",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0x6455b075e7a43bf05b6d7a2e86b81ff68163acc7a37eb48a4ab95d7e9e4653b7",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-no_section_terminator_section_bodies_ok_1]": {
        "vectors": {
            "0": {
                "code": "0xef00010100040200010001040000008000005b00",
                "results": {
                    "Prague": {
                        "exception": "EOFException.INVALID_FIRST_SECTION_TYPE",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0xeba21ef9f2f1f178294a4bdadb06132737fcf32573bebadf549802a2f922ba75",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-no_section_terminator_section_bodies_ok_2]": {
        "vectors": {
            "0": {
                "code": "0xef00010100040200010002040000008000005b5b00",
                "results": {
                    "Prague": {
                        "exception": "EOFException.INVALID_FIRST_SECTION_TYPE",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0x53c2dbf1fc5a6dc3f46ac409a9c74d6aba5da0f636e3933939e64e09075e1d44",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-no_section_terminator_nonzero]": {
        "vectors": {
            "0": {
                "code": "0xef0001010004020001000104000030310080000000",
                "results": {
                    "Prague": {
                        "exception": "EOFException.MISSING_TERMINATOR",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0x32254fea3d44e7009c9432d783dbc86d95a6ac424890d48bb645ec3efb8664fd",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-no_section_terminator_nonzero_1]": {
        "vectors": {
            "0": {
                "code": "0xef0001010004020001000204000030320080000000",
                "results": {
                    "Prague": {
                        "exception": "EOFException.MISSING_TERMINATOR",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0x627c0bde24de31ddabf72fc9f7dbc49d58dafea03e6f9eb2fc6b0e309264bea2",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-no_section_terminator_nonzero_2]": {
        "vectors": {
            "0": {
                "code": "0xef00010100040200010003040000303300800000",
                "results": {
                    "Prague": {
                        "exception": "EOFException.MISSING_TERMINATOR",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0x47892fccbfda99029e8927d67361163f6fbc218bbd15e68e0d9a7386ad84bdee",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-no_section_terminator_nonzero_3]": {
        "vectors": {
            "0": {
                "code": "0xef00010100040200010003040000303400800001600000",
                "results": {
                    "Prague": {
                        "exception": "EOFException.MISSING_TERMINATOR",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0x7c25e9764e509756a37e192ebee796858f457588b113c67a005e19d8fb8353e4",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-no_section_terminator_nonzero_4]": {
        "vectors": {
            "0": {
                "code": "0xef00010100040200010003040000666500800001600000",
                "results": {
                    "Prague": {
                        "exception": "EOFException.MISSING_TERMINATOR",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0xb4a0533513d7069acd9b4746506b6a687a99c857e95bd62c34643372aa46ca78",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-no_code_section_contents]": {
        "vectors": {
            "0": {
                "code": "0xef000101000402000100010400000000800000",
                "results": {
                    "Prague": {
                        "exception": "EOFException.INVALID_SECTION_BODIES_SIZE",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0x798b43954e4dd4c040bc442ec5170958145f08bff53f621e2b0308f1d330874d",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-incomplete_code_section_contents]": {
        "vectors": {
            "0": {
                "code": "0xef00010100040200010002040000000080000000",
                "results": {
                    "Prague": {
                        "exception": "EOFException.INVALID_SECTION_BODIES_SIZE",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0xd01195b3d6ea1064de225a65bb7f3bc71af6a2c1e10b37d7985ea51455c762f1",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-trailing_bytes_after_code_section]": {
        "vectors": {
            "0": {
                "code": "0xef000101000402000100030400000000800001600000deadbeef",
                "results": {
                    "Prague": {
                        "exception": "EOFException.INVALID_SECTION_BODIES_SIZE",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0xaf25da75a0c7e8b4b56c2e53cd429d6a04a102af669994dd5a2f200cb0b0abb4",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-empty_code_section]": {
        "vectors": {
            "0": {
                "code": "0xef000101000402000100000400000000800000",
                "results": {
                    "Prague": {
                        "exception": "EOFException.ZERO_SECTION_SIZE",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0x123cee4fae393f84c913e3a2fbc9a100a5d6ecf423f9d7de3f6b28b197d48fb6",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-empty_code_section_with_non_empty_data]": {
        "vectors": {
            "0": {
                "code": "0xef000101000402000100000400040000800000deadbeef",
                "results": {
                    "Prague": {
                        "exception": "EOFException.ZERO_SECTION_SIZE",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0x0704ee4ef029be9e1ab7ea468ad34fce8e329e12afda2412d2dbd54b72e88b4e",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-no_data_section_contents]": {
        "vectors": {
            "0": {
                "code": "0xef00010100040200010001040001000080000000",
                "results": {
                    "Prague": {
                        "exception": "EOFException.TOPLEVEL_CONTAINER_TRUNCATED",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0x8884e3db8162ada2d26947c9325fab18dc15b7fb9c41d0d540f9a78b651df179",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-data_section_contents_incomplete]": {
        "vectors": {
            "0": {
                "code": "0xef00010100040200010001040004000080000000aabbcc",
                "results": {
                    "Prague": {
                        "exception": "EOFException.TOPLEVEL_CONTAINER_TRUNCATED",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0x6aa98a16c2ded053d5c133f8e6de756775fdbdc07424de1afbd046582f0d2981",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-data_section_preceding_code_section]": {
        "vectors": {
            "0": {
                "code": "0xef000101000404000402000100010000800000deadbeef00",
                "results": {
                    "Prague": {
                        "exception": "EOFException.MISSING_CODE_HEADER",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0x3b33fb9cc4a1c09af50771fead670e3d90b66204d86411891e1ce703dc3a51fa",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-data_section_without_code_section]": {
        "vectors": {
            "0": {
                "code": "0xef000101000004000400deadbeef",
                "results": {
                    "Prague": {
                        "exception": "EOFException.ZERO_SECTION_SIZE",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0x5fc3314b74429747c2cf03186cc7031a4ac4349c4498b5a64ebe3d285a8519e7",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-no_section_terminator_3a]": {
        "vectors": {
            "0": {
                "code": "0xef0001010004020001000304000000800000030004",
                "results": {
                    "Prague": {
                        "exception": "EOFException.INVALID_SECTION_BODIES_SIZE",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0x7ad303a4d4c3b1f21d137a71865bea3b592f77e86fbaa4c364e0a5097ddb1258",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-no_section_terminator_4a]": {
        "vectors": {
            "0": {
                "code": "0xef000101000402000100010400040080000000aabbccdd",
                "results": {
                    "Prague": {
                        "exception": "EOFException.INVALID_FIRST_SECTION_TYPE",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0xa1a05de2de5582f2b5ca7a8ae5ab2bde675130a7d57513669d9743fc12767d23",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-trailing_bytes_after_data_section]": {
        "vectors": {
            "0": {
                "code": "0xef000101000402000100030400040000800001600000aabbccddee",
                "results": {
                    "Prague": {
                        "exception": "EOFException.INVALID_SECTION_BODIES_SIZE",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0x6af0a42c0956fa8324f1dc7b5864d43b49abc38291c39abc831745d97d2cb9c4",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-multiple_data_sections]": {
        "vectors": {
            "0": {
                "code": "0xef000101000402000100030400030400030000800001600000aabbccaabbcc",
                "results": {
                    "Prague": {
                        "exception": "EOFException.MISSING_TERMINATOR",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0xac0349e3bdbb2764e7079b2640d7a5fd78b11ca9f6e7400e78a159d41fc44a0e",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-multiple_code_and_data_sections]": {
        "vectors": {
            "0": {
                "code": "0xef0001010008020002000100010400010400010000800000008000000000aaaa",
                "results": {
                    "Prague": {
                        "exception": "EOFException.MISSING_TERMINATOR",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0x8c5eeb7cc6d59295c70b96517d732fa9f8de1ad98f04e96d35e8f1bfebbb4bc5",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-unknown_section_1]": {
        "vectors": {
            "0": {
                "code": "0xef0001010004020001000104000004000100008000000001",
                "results": {
                    "Prague": {
                        "exception": "EOFException.MISSING_TERMINATOR",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0xf0359617ffc493f705b95ad5aa8beeef9f0a0e4c7e4a9700ef48146fc0536945",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-unknown_section_2]": {
        "vectors": {
            "0": {
                "code": "0xef0001010004020001000104000104000000008000000001",
                "results": {
                    "Prague": {
                        "exception": "EOFException.MISSING_TERMINATOR",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0x1802ec12402efc37a98159571e632512ca55afcd7c4ccfa90ce76c93bcefe8fe",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-unknown_section_empty]": {
        "vectors": {
            "0": {
                "code": "0xef00010100040200010001040000040000000080000000",
                "results": {
                    "Prague": {
                        "exception": "EOFException.MISSING_TERMINATOR",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0x4b984db86b57e7f5bc3a5c087249999b28a2a02c5080ff62e26f40eef1595512",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-no_type_section]": {
        "vectors": {
            "0": {
                "code": "0xef00010200010001040001000000",
                "results": {
                    "Prague": {
                        "exception": "EOFException.MISSING_TYPE_HEADER",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0xa795004b2803eb206b1679a4010f422f435651a3c19108dc0b511cf0067d94d2",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-too_many_type_sections]": {
        "vectors": {
            "0": {
                "code": "0xef0001010004010004020001000104000000000000000000000000",
                "results": {
                    "Prague": {
                        "exception": "EOFException.MISSING_CODE_HEADER",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0x2a27219c5a3f09acdf6dcf0ebd7e418ae28df865e79ce445366e803628315b53",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-empty_type_section]": {
        "vectors": {
            "0": {
                "code": "0xef000101000002000100010400000000",
                "results": {
                    "Prague": {
                        "exception": "EOFException.ZERO_SECTION_SIZE",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0x633cabace96286c468dbec2d72cc44224dea6c62a28be600deb593246d30b972",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-type_section_too_small_1]": {
        "vectors": {
            "0": {
                "code": "0xef00010100010200010001040000000000",
                "results": {
                    "Prague": {
                        "exception": "EOFException.INVALID_TYPE_SECTION_SIZE",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0xc4c0c696859ce87f7eef33a88147ba098941bd64d49ae64abd4b70e923b8c540",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-type_section_too_small_2]": {
        "vectors": {
            "0": {
                "code": "0xef000101000302000100010400000000000000",
                "results": {
                    "Prague": {
                        "exception": "EOFException.INVALID_TYPE_SECTION_SIZE",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0xcb7a1b05a9cf003170cd89180f270aa63f7a2c9d66bcda69e069f359de8d82e5",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-type_section_too_big]": {
        "vectors": {
            "0": {
                "code": "0xef0001010005020001000104000000000000000000",
                "results": {
                    "Prague": {
                        "exception": "EOFException.INVALID_TYPE_SECTION_SIZE",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0xabaca3f1bb427a8e8843e2274ca9a00f8c4d096cc00b67fef4914714019a0d35",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-single_code_section_non_zero_inputs]": {
        "vectors": {
            "0": {
                "code": "0xef00010100040200010002040000000180000150e4",
                "results": {
                    "Prague": {
                        "exception": "EOFException.INVALID_FIRST_SECTION_TYPE",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0x6e28ce389b0de09441e3f9c4ff4a5d702d2027a1fe987fb96b91991baeec083c",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-single_code_section_non_zero_outputs]": {
        "vectors": {
            "0": {
                "code": "0xef0001010004020001000204000000000100015fe4",
                "results": {
                    "Prague": {
                        "exception": "EOFException.INVALID_FIRST_SECTION_TYPE",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0x474996fe40a6e627c1e8e352e14820e779bccffa4bb21944af14428bec78334b",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-multiple_code_section_non_zero_inputs]": {
        "vectors": {
            "0": {
                "code": "0xef00010100080200020002000104000000018000010080000050e400",
                "results": {
                    "Prague": {
                        "exception": "EOFException.INVALID_FIRST_SECTION_TYPE",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0x6c1e2dd8bbcad553bfcb2f142628ed6cbfdf52003196bb536a2eb1db777eaf55",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-multiple_code_section_non_zero_outputs]": {
        "vectors": {
            "0": {
                "code": "0xef0001010008020002000100010400000000010001008000005f00",
                "results": {
                    "Prague": {
                        "exception": "EOFException.INVALID_FIRST_SECTION_TYPE",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0xe5c36499f043c54474f8d202e2f887279c5bc05117cdd10404a858a6dfd4aeca",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-data_section_before_code_with_type]": {
        "vectors": {
            "0": {
                "code": "0xef000101000404000102000100010000800000aa00",
                "results": {
                    "Prague": {
                        "exception": "EOFException.MISSING_CODE_HEADER",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0xc6275f8730e0eed065758782f271348d5bc024fc9649c479c04480b0d600ed21",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-data_section_listed_in_type]": {
        "vectors": {
            "0": {
                "code": "0xef000101000802000100010400010000800000008000000000",
                "results": {
                    "Prague": {
                        "exception": "EOFException.INVALID_TYPE_SECTION_SIZE",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0x9af123ae3f26f8f6e89b3b1674d59a5395620ec158d3f69b9f57870105aa8068",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-single_code_section_incomplete_type]": {
        "vectors": {
            "0": {
                "code": "0xef00010100020200010001040000000000",
                "results": {
                    "Prague": {
                        "exception": "EOFException.INVALID_SECTION_BODIES_SIZE",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0xbcd379a538347ecd9caefd0a84398819964d8ba4c437915462793ea396b41310",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-single_code_section_input_too_large]": {
        "vectors": {
            "0": {
                "code": "0xef0001010008020002008400810400000000800080800000005f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5fe30001005050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050e4",
                "results": {
                    "Prague": {
                        "exception": "EOFException.INPUTS_OUTPUTS_NUM_ABOVE_LIMIT",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0xf5f30fbdca3ce117c91d1e45dd8fa512899275d79b29aa2a570ef8f4f6cf443f",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-single_code_section_output_too_large]": {
        "vectors": {
            "0": {
                "code": "0xef000101000802000200040082040000000080008100810080e30001005f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5fe4",
                "results": {
                    "Prague": {
                        "exception": "EOFException.INPUTS_OUTPUTS_NUM_ABOVE_LIMIT",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0x5fda5f68a48cac6c23c865b0c1c5a2659f43f0b2f529128c7fc654f55e9fd28e",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    },
    "tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py::test_legacy_initcode_invalid_eof_v1_contract[fork_PragueEIP7692-eof_test-single_code_section_max_stack_size_too_large]": {
        "vectors": {
            "0": {
                "code": "0xef
                "results": {
                    "Prague": {
                        "exception": "EOFException.MAX_STACK_HEIGHT_ABOVE_LIMIT",
                        "result": false
                    }
                }
            }
        },
        "_info": {
            "hash": "0x2982d1206037c6df75eecd72936297a2e5b6902d3af9867e13750de66c4b48a1",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "Hyperledger Besu evm 24.7-develop-30c96c7",
            "description": "Test function documentation:\n\n    Test creating various types of valid EOF V1 contracts using legacy\n    initcode and a contract creating transaction.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/eip7692-prague@v1.0.7/tests/prague/eip7692_eof_v1/eip3540_eof_v1/test_code_validation.py#L141",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3540.md",
            "reference-spec-version": "8dcb0a8c1c0102c87224308028632cc986a61183"
        }
    }
}